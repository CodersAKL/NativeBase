// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Segments inside Header 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        hasSegment={true}
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <View
            style={Object {}}
          >
            <View
              accessible={true}
              focusable={false}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 2,
                  "borderWidth": undefined,
                  "opacity": 1,
                }
              }
            >
              <Text
                style={Object {}}
                uppercase={false}
              >
                Puppies
              </Text>
            </View>
            <View
              accessible={true}
              focusable={false}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "borderRadius": 2,
                  "borderWidth": undefined,
                  "opacity": 1,
                }
              }
            >
              <Text
                style={Object {}}
                uppercase={false}
              >
                Cubs
              </Text>
            </View>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Segments outside Header 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        hasSegment={true}
        style={Object {}}
      />
    </RCTSafeAreaView>
  </View>
  <View
    style={Object {}}
  >
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderRadius": 2,
          "borderWidth": undefined,
          "opacity": 1,
        }
      }
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Puppies
      </Text>
    </View>
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderRadius": 2,
          "borderWidth": undefined,
          "opacity": 1,
        }
      }
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Kittens
      </Text>
    </View>
    <View
      accessible={true}
      focusable={false}
      isTVSelectable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "borderRadius": 2,
          "borderWidth": undefined,
          "opacity": 1,
        }
      }
    >
      <Text
        style={Object {}}
        uppercase={false}
      >
        Cubs
      </Text>
    </View>
  </View>
</View>
`;
