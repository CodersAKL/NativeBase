// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders Header noShadow 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        noShadow={true}
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header No Shadow
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header span 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        span={true}
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header Span
          </Text>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with Custom background color 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": "#dc4239",
        }
      }
    >
      <View
        androidStatusBarColor="#dc2015"
        iosBarStyle="light-content"
        style={
          Array [
            Object {},
            Object {
              "backgroundColor": "#dc4239",
            },
          ]
        }
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                    Object {
                      "color": "#FFF",
                    },
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={
              Array [
                Object {},
                Object {
                  "color": "#FFF",
                },
              ]
            }
          >
            Custom Header
          </Text>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with Icon & Text Button 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
            <Text
              style={Object {}}
              uppercase={false}
            >
              Back
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with Icon Button & Text Button 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with Icon Buttons 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with Text Buttons 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              Back
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              style={Object {}}
              uppercase={false}
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with Title and Subtitle 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        hasSubtitle={true}
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Title
          </Text>
          <Text
            style={Object {}}
          >
            Subtitle
          </Text>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with multiple Icon Button 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;

exports[`renders Header with only Title 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        />
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </RCTSafeAreaView>
  </View>
</View>
`;
