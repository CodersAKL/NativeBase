// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders anatomy 1`] = `
<View
  style={Object {}}
>
  <View>
    <RCTSafeAreaView
      emulateUnlessSupported={true}
      style={
        Object {
          "backgroundColor": undefined,
        }
      }
    >
      <View
        style={Object {}}
      >
        <View
          style={Object {}}
        >
          <View
            accessible={true}
            focusable={false}
            isTVSelectable={true}
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "borderRadius": 2,
                "borderWidth": undefined,
                "opacity": 1,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": undefined,
                    "fontSize": 12,
                  },
                  Array [
                    Object {},
                    Object {},
                  ],
                  Object {
                    "fontFamily": "Ionicons",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              ï‡ƒ
            </Text>
          </View>
        </View>
        <View
          style={Object {}}
        >
          <Text
            numberOfLines={1}
            style={Object {}}
          >
            Header
          </Text>
        </View>
        <View
          style={Object {}}
        />
      </View>
    </RCTSafeAreaView>
  </View>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": undefined,
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      automaticallyAdjustContentInsets={false}
      contentContainerStyle={
        Array [
          Object {
            "padding": 10,
          },
          undefined,
        ]
      }
      contentInset={
        Object {
          "bottom": 0,
        }
      }
      enableAutomaticScroll={true}
      enableOnAndroid={false}
      enableResetScrollToCoords={true}
      extraHeight={75}
      extraScrollHeight={0}
      getScrollResponder={[Function]}
      handleOnScroll={[Function]}
      keyboardDismissMode="interactive"
      keyboardOpeningTime={250}
      keyboardShouldPersistTaps="handled"
      keyboardSpace={0}
      onScroll={[Function]}
      padder={true}
      resetKeyboardSpace={[Function]}
      resetScrollToCoords={
        Object {
          "x": 0,
          "y": 0,
        }
      }
      scrollEventThrottle={1}
      scrollForExtraHeightOnAndroid={[Function]}
      scrollIntoView={[Function]}
      scrollToEnd={[Function]}
      scrollToFocusedInput={[Function]}
      scrollToPosition={[Function]}
      showsVerticalScrollIndicator={true}
      style={Object {}}
      update={[Function]}
      viewIsInsideTabBar={false}
    >
      <View>
        <Text
          style={Object {}}
          uppercase={false}
        >
          Content goes here
        </Text>
      </View>
    </RCTScrollView>
  </RCTSafeAreaView>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "backgroundColor": undefined,
      }
    }
  >
    <View
      style={Object {}}
    >
      <View
        style={Object {}}
      >
        <View
          accessible={true}
          focusable={false}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "borderRadius": 2,
              "borderWidth": undefined,
              "opacity": 1,
            }
          }
        >
          <Text
            style={Object {}}
            uppercase={false}
          >
            Footer
          </Text>
        </View>
      </View>
    </View>
  </RCTSafeAreaView>
</View>
`;
