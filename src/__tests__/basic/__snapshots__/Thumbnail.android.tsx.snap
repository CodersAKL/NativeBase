// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders default shape thumbnail 1`] = `
<View
  style={
    Object {
      "backgroundColor": undefined,
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Image
        small={true}
        source={
          Object {
            "testUri": "../../../src/__tests__/assets/drawer-cover.png",
          }
        }
        style={Object {}}
      />
      <Image
        source={
          Object {
            "testUri": "../../../src/__tests__/assets/drawer-cover.png",
          }
        }
        style={Object {}}
      />
      <Image
        large={true}
        source={
          Object {
            "testUri": "../../../src/__tests__/assets/drawer-cover.png",
          }
        }
        style={Object {}}
      />
    </View>
  </RCTScrollView>
</View>
`;

exports[`renders square shape thumbnail 1`] = `
<View
  style={
    Object {
      "backgroundColor": undefined,
      "flex": 1,
    }
  }
>
  <RCTScrollView
    automaticallyAdjustContentInsets={false}
    contentContainerStyle={
      Array [
        Object {
          "padding": undefined,
        },
        undefined,
      ]
    }
    contentInset={
      Object {
        "bottom": 0,
      }
    }
    enableAutomaticScroll={true}
    enableOnAndroid={false}
    enableResetScrollToCoords={true}
    extraHeight={75}
    extraScrollHeight={0}
    getScrollResponder={[Function]}
    handleOnScroll={[Function]}
    keyboardDismissMode="interactive"
    keyboardOpeningTime={250}
    keyboardShouldPersistTaps="handled"
    keyboardSpace={0}
    onScroll={[Function]}
    resetKeyboardSpace={[Function]}
    resetScrollToCoords={
      Object {
        "x": 0,
        "y": 0,
      }
    }
    scrollEventThrottle={1}
    scrollForExtraHeightOnAndroid={[Function]}
    scrollIntoView={[Function]}
    scrollToEnd={[Function]}
    scrollToFocusedInput={[Function]}
    scrollToPosition={[Function]}
    showsVerticalScrollIndicator={true}
    style={Object {}}
    update={[Function]}
    viewIsInsideTabBar={false}
  >
    <View>
      <Image
        small={true}
        source={
          Object {
            "testUri": "../../../src/__tests__/assets/drawer-cover.png",
          }
        }
        square={true}
        style={Object {}}
      />
      <Image
        source={
          Object {
            "testUri": "../../../src/__tests__/assets/drawer-cover.png",
          }
        }
        square={true}
        style={Object {}}
      />
      <Image
        large={true}
        source={
          Object {
            "testUri": "../../../src/__tests__/assets/drawer-cover.png",
          }
        }
        square={true}
        style={Object {}}
      />
    </View>
  </RCTScrollView>
</View>
`;
